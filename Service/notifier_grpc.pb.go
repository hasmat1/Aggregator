// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package Service

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// EndpointsClient is the client API for Endpoints service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type EndpointsClient interface {
}

type endpointsClient struct {
	cc grpc.ClientConnInterface
}

func NewEndpointsClient(cc grpc.ClientConnInterface) EndpointsClient {
	return &endpointsClient{cc}
}

// EndpointsServer is the server API for Endpoints service.
// All implementations must embed UnimplementedEndpointsServer
// for forward compatibility
type EndpointsServer interface {
	mustEmbedUnimplementedEndpointsServer()
}

// UnimplementedEndpointsServer must be embedded to have forward compatible implementations.
type UnimplementedEndpointsServer struct {
}

func (UnimplementedEndpointsServer) mustEmbedUnimplementedEndpointsServer() {}

// UnsafeEndpointsServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to EndpointsServer will
// result in compilation errors.
type UnsafeEndpointsServer interface {
	mustEmbedUnimplementedEndpointsServer()
}

func RegisterEndpointsServer(s grpc.ServiceRegistrar, srv EndpointsServer) {
	s.RegisterService(&Endpoints_ServiceDesc, srv)
}

// Endpoints_ServiceDesc is the grpc.ServiceDesc for Endpoints service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Endpoints_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pb.pb.Endpoints",
	HandlerType: (*EndpointsServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "pb/notifier.proto",
}
